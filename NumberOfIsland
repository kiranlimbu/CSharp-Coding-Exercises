public class Solution {
    public int NumIslands(char[][] grid) {
        
        int count = 0;
        for (int row=0; row<grid.GetLength(0); row++) {
            for (int col=0; col<grid[row].Length; col++) {
                if (grid[row][col] == '1') {
                    count++;
                    Dfs(grid, row, col);
                }
            }
        }
        return count;
    }
    
    public void Dfs(char[][] grid, int row, int col) {
        if (row<0 || row>grid.GetLength(0)-1 || col<0 || col>grid[row].Length-1 || grid[row][col] == '0')
            return;
        
        grid[row][col] = '0';
        
        Dfs(grid, row, col+1); // go right
        Dfs(grid, row+1, col); // go down
        Dfs(grid, row, col-1); // go left
        Dfs(grid, row-1, col); // go up
    }
}
